{"ast":null,"code":"import _classCallCheck from \"/Users/gradyknight/Documents/code/activeProjects/coreGownSampling/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gradyknight/Documents/code/activeProjects/coreGownSampling/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gradyknight/Documents/code/activeProjects/coreGownSampling/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gradyknight/Documents/code/activeProjects/coreGownSampling/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gradyknight/Documents/code/activeProjects/coreGownSampling/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gradyknight/Documents/code/activeProjects/coreGownSampling/src/components/ExitCore/UserExitCoreSummaryCard.js\";\nimport React from 'react';\nimport { Container, Row, Col, Button, Alert } from 'reactstrap';\nimport * as transactionManipulations from '../../api/transactionManipulations';\nimport moment from 'moment';\n\nvar UserExitCoreSummaryCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserExitCoreSummaryCard, _React$Component);\n\n  function UserExitCoreSummaryCard() {\n    _classCallCheck(this, UserExitCoreSummaryCard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UserExitCoreSummaryCard).apply(this, arguments));\n  }\n\n  _createClass(UserExitCoreSummaryCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          transactions = _this$props.transactions,\n          initials = _this$props.initials,\n          exitTheCore = _this$props.exitTheCore,\n          timeBoundry = _this$props.timeBoundry,\n          selectedGown = _this$props.selectedGown,\n          selectedGloves = _this$props.selectedGloves,\n          clickedGown = _this$props.clickedGown;\n      var currentTime = Date.now();\n      var weekBoundries = {\n        lowerBoundry: timeBoundry.lowerBoundry,\n        upperBoundry: timeBoundry.upperBoundry\n      };\n      var entriesInformation = transactionManipulations.countOfEntriesByDay(initials, transactions, weekBoundries);\n      var numberOfDaysWithAnEntryThisWeek = transactionManipulations.numberOfEntryDays(entriesInformation);\n      var hasValidGloveSampleForToday = transactionManipulations.forTimePointAndUserIsThereGloveSample(initials, transactions, currentTime);\n      var numberOfGownSamplesThisWeek = transactionManipulations.countOfGownSamplesInTimePeriodForUser(initials, transactions, weekBoundries);\n      var hasValidGownSamples = false;\n\n      if (numberOfDaysWithAnEntryThisWeek <= 1) {\n        hasValidGownSamples = false;\n      } else if (numberOfDaysWithAnEntryThisWeek >= 2) {\n        if (numberOfGownSamplesThisWeek >= 2) {\n          hasValidGownSamples = true;\n        } else {\n          hasValidGownSamples = false;\n        }\n      }\n\n      var buttonColor = 'danger';\n      console.log(\"\".concat(initials, \" glove: \").concat(hasValidGloveSampleForToday, \" gown: \").concat(hasValidGownSamples));\n\n      if (hasValidGloveSampleForToday && hasValidGownSamples) {\n        buttonColor = 'success';\n      }\n\n      var gownButtonColor;\n      var gloveButtonColor;\n\n      if (selectedGown) {\n        gownButtonColor = 'primary';\n      } else {\n        gownButtonColor = 'secondary';\n      }\n\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, initials), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, initials, \" has entered the core \", numberOfDaysWithAnEntryThisWeek, \" days this week \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), initials, \" has \", numberOfGownSamplesThisWeek, \" valid gown samples this week\"), hasValidGloveSampleForToday ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, initials, \" has a valid glove sample in +/- 12 hours from \", currentTime) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, initials, \" does not have a valid glove sample in +/- 12 hours from \", moment(currentTime).format('DDMMMYY HH:mm:ss')), hasValidGloveSampleForToday ? React.createElement(Alert, {\n        color: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Gloves are good\") : React.createElement(Alert, {\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Need glove samples \"), hasValidGownSamples ? React.createElement(Alert, {\n        color: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Gown samples are good\") : React.createElement(Alert, {\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Need gown samples \")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Select which samples\")), React.createElement(Button, {\n        color: gownButtonColor,\n        onClick: clickedGown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Gown Samples\")), React.createElement(Button, {\n        color: buttonColor,\n        onClick: exitTheCore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Log \", initials, \" out of the core\"));\n    }\n  }]);\n\n  return UserExitCoreSummaryCard;\n}(React.Component);\n\nexport { UserExitCoreSummaryCard as default };","map":{"version":3,"sources":["/Users/gradyknight/Documents/code/activeProjects/coreGownSampling/src/components/ExitCore/UserExitCoreSummaryCard.js"],"names":["React","Container","Row","Col","Button","Alert","transactionManipulations","moment","UserExitCoreSummaryCard","props","transactions","initials","exitTheCore","timeBoundry","selectedGown","selectedGloves","clickedGown","currentTime","Date","now","weekBoundries","lowerBoundry","upperBoundry","entriesInformation","countOfEntriesByDay","numberOfDaysWithAnEntryThisWeek","numberOfEntryDays","hasValidGloveSampleForToday","forTimePointAndUserIsThereGloveSample","numberOfGownSamplesThisWeek","countOfGownSamplesInTimePeriodForUser","hasValidGownSamples","buttonColor","console","log","gownButtonColor","gloveButtonColor","format","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Container, Row, Col, Button, Alert } from 'reactstrap';\nimport * as transactionManipulations from '../../api/transactionManipulations';\nimport moment from 'moment';\n\n\n\nexport default class UserExitCoreSummaryCard extends React.Component {\n  \n  \n    render() {\n        const {transactions, initials, exitTheCore, timeBoundry, selectedGown, selectedGloves, clickedGown} = this.props;\n        let currentTime = Date.now();\n        let weekBoundries = {\n            lowerBoundry:timeBoundry.lowerBoundry,\n            upperBoundry:timeBoundry.upperBoundry\n        }\n        let entriesInformation = transactionManipulations.countOfEntriesByDay(initials,transactions,weekBoundries);\n        let numberOfDaysWithAnEntryThisWeek = transactionManipulations.numberOfEntryDays(entriesInformation);\n        let hasValidGloveSampleForToday = transactionManipulations.forTimePointAndUserIsThereGloveSample(initials,transactions,currentTime);\n        let numberOfGownSamplesThisWeek = transactionManipulations.countOfGownSamplesInTimePeriodForUser(initials,transactions,weekBoundries);\n        let hasValidGownSamples = false;\n        if (numberOfDaysWithAnEntryThisWeek <= 1) {\n            hasValidGownSamples = false;\n        } else if (numberOfDaysWithAnEntryThisWeek >= 2){\n            if (numberOfGownSamplesThisWeek >=2) {\n                hasValidGownSamples = true;\n            } else {\n                hasValidGownSamples = false;\n            }\n        } \n        let buttonColor = 'danger';\n        console.log(`${initials} glove: ${hasValidGloveSampleForToday} gown: ${hasValidGownSamples}`)\n        if (hasValidGloveSampleForToday && hasValidGownSamples) {\n            buttonColor = 'success';\n        }\n        let gownButtonColor;\n        let gloveButtonColor;\n        if (selectedGown) {\n            gownButtonColor = 'primary'\n        } else {\n            gownButtonColor = 'secondary'\n        }\n        return (\n            <Container>\n                <Row>\n                    <h3>{initials}</h3> \n                    <p>\n                        {initials} has entered the core {numberOfDaysWithAnEntryThisWeek} days this week <br/>\n                        {initials} has {numberOfGownSamplesThisWeek} valid gown samples this week\n                    </p>\n                        {hasValidGloveSampleForToday?<div>{initials} has a valid glove sample in +/- 12 hours from {currentTime}</div>:<div>{initials} does not have a valid glove sample in +/- 12 hours from {moment(currentTime).format('DDMMMYY HH:mm:ss')}</div>}\n                    {hasValidGloveSampleForToday?<Alert color='success'>Gloves are good</Alert>:<Alert color='danger'>Need glove samples </Alert>}\n                    {hasValidGownSamples?<Alert color='success'>Gown samples are good</Alert>:<Alert color='danger'>Need gown samples </Alert>}\n                </Row>\n                <Row>\n                    <Col md=\"12\">\n                        <h3>Select which samples</h3>\n                    </Col>\n                    <Button\n                        color = {gownButtonColor}\n                        onClick = {clickedGown}\n                    >\n                        Gown Samples\n                    </Button>\n                </Row>\n                <Button \n                    color={buttonColor}\n                    onClick={exitTheCore}\n                >\n                    Log {initials} out of the core\n                </Button>\n            </Container>\n        );\n  }\n}"]},"metadata":{},"sourceType":"module"}