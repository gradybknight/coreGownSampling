{"ast":null,"code":"import moment from 'moment';\nexport function getShiftTimeBoundries() {\n  var sixHundred = moment({\n    hour: 6,\n    minute: 0,\n    seconds: 0\n  });\n  var eighteenHundred = moment({\n    hour: 18,\n    minute: 0,\n    seconds: 0\n  });\n  var currentTime = moment(Date.now());\n  var shiftTimeBoundries = {\n    lowerBoundry: '',\n    upperBoundry: ''\n  };\n\n  if (currentTime < sixHundred) {\n    shiftTimeBoundries.lowerBoundry = eighteenHundred.subtract(1, 'days').unix() * 1000;\n    shiftTimeBoundries.upperBoundry = sixHundred.unix() * 1000;\n    return shiftTimeBoundries;\n  } else if (currentTime >= sixHundred && currentTime < eighteenHundred) {\n    shiftTimeBoundries.lowerBoundry = sixHundred.unix() * 1000;\n    shiftTimeBoundries.upperBoundry = eighteenHundred.unix() * 1000;\n    return shiftTimeBoundries;\n  } else {\n    shiftTimeBoundries.lowerBoundry = eighteenHundred.unix() * 1000;\n    shiftTimeBoundries.upperBoundry = sixHundred.add(1, 'days').unix() * 1000;\n    return shiftTimeBoundries;\n  }\n}\nexport function getWeekTimeBoundries(timeValue) {\n  var selectedDate = moment(timeValue);\n  var sixHundred = moment({\n    hour: 6,\n    minute: 0,\n    seconds: 0\n  });\n  var weekTimeBoundries = {\n    lowerBoundry: '',\n    upperBoundry: ''\n  };\n\n  if (selectedDate.isBefore(sixHundred) && selectedDate.day() === 0) {\n    // this is for before 06:00 on mondays.  Need to set week to previous week\n    var lowerPlaceholder = moment(selectedDate).subtract(7, 'days');\n    var lowerBound = moment().set({\n      'year': lowerPlaceholder.get('year'),\n      'date': lowerPlaceholder.get('date'),\n      'hour': 6,\n      'minute': 0,\n      'second': 0,\n      'millisecond': 0\n    });\n    console.log(lowerPlaceholder.format(\"MMM-DD-YYYY hh:mm:ss\"));\n    console.log(lowerBound.format(\"MMM-DD-YYYY hh:mm:ss\"));\n  }\n}","map":{"version":3,"sources":["/Users/gradyknight/Documents/code/activeProjects/coreGownSampling/src/api/api.js"],"names":["moment","getShiftTimeBoundries","sixHundred","hour","minute","seconds","eighteenHundred","currentTime","Date","now","shiftTimeBoundries","lowerBoundry","upperBoundry","subtract","unix","add","getWeekTimeBoundries","timeValue","selectedDate","weekTimeBoundries","isBefore","day","lowerPlaceholder","lowerBound","set","get","console","log","format"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,OAAO,SAASC,qBAAT,GAAiC;AACpC,MAAIC,UAAU,GAAGF,MAAM,CAAC;AAACG,IAAAA,IAAI,EAAE,CAAP;AAAUC,IAAAA,MAAM,EAAE,CAAlB;AAAqBC,IAAAA,OAAO,EAAE;AAA9B,GAAD,CAAvB;AACA,MAAIC,eAAe,GAAGN,MAAM,CAAC;AAACG,IAAAA,IAAI,EAAC,EAAN;AAAUC,IAAAA,MAAM,EAAC,CAAjB;AAAoBC,IAAAA,OAAO,EAAC;AAA5B,GAAD,CAA5B;AACA,MAAIE,WAAW,GAAGP,MAAM,CAACQ,IAAI,CAACC,GAAL,EAAD,CAAxB;AACA,MAAIC,kBAAkB,GAAG;AACjBC,IAAAA,YAAY,EAAC,EADI;AAEjBC,IAAAA,YAAY,EAAC;AAFI,GAAzB;;AAIA,MAAIL,WAAW,GAAGL,UAAlB,EAA8B;AAC1BQ,IAAAA,kBAAkB,CAACC,YAAnB,GAAkCL,eAAe,CAACO,QAAhB,CAAyB,CAAzB,EAA4B,MAA5B,EAAoCC,IAApC,KAA2C,IAA7E;AACAJ,IAAAA,kBAAkB,CAACE,YAAnB,GAAkCV,UAAU,CAACY,IAAX,KAAkB,IAApD;AACA,WAAOJ,kBAAP;AACH,GAJD,MAIO,IAAIH,WAAW,IAAIL,UAAf,IAA6BK,WAAW,GAAGD,eAA/C,EAAiE;AACpEI,IAAAA,kBAAkB,CAACC,YAAnB,GAAkCT,UAAU,CAACY,IAAX,KAAkB,IAApD;AACAJ,IAAAA,kBAAkB,CAACE,YAAnB,GAAkCN,eAAe,CAACQ,IAAhB,KAAuB,IAAzD;AACA,WAAOJ,kBAAP;AACH,GAJM,MAIA;AACHA,IAAAA,kBAAkB,CAACC,YAAnB,GAAkCL,eAAe,CAACQ,IAAhB,KAAuB,IAAzD;AACAJ,IAAAA,kBAAkB,CAACE,YAAnB,GAAkCV,UAAU,CAACa,GAAX,CAAe,CAAf,EAAkB,MAAlB,EAA0BD,IAA1B,KAAiC,IAAnE;AACA,WAAOJ,kBAAP;AACH;AACJ;AAED,OAAO,SAASM,oBAAT,CAA8BC,SAA9B,EAAyC;AAC5C,MAAIC,YAAY,GAAGlB,MAAM,CAACiB,SAAD,CAAzB;AACA,MAAIf,UAAU,GAAGF,MAAM,CAAC;AAACG,IAAAA,IAAI,EAAE,CAAP;AAAUC,IAAAA,MAAM,EAAE,CAAlB;AAAqBC,IAAAA,OAAO,EAAE;AAA9B,GAAD,CAAvB;AACA,MAAIc,iBAAiB,GAAG;AACpBR,IAAAA,YAAY,EAAC,EADO;AAEpBC,IAAAA,YAAY,EAAC;AAFO,GAAxB;;AAKA,MAAIM,YAAY,CAACE,QAAb,CAAsBlB,UAAtB,KAAqCgB,YAAY,CAACG,GAAb,OAAuB,CAAhE,EAAmE;AAC/D;AACA,QAAIC,gBAAgB,GAAGtB,MAAM,CAACkB,YAAD,CAAN,CAAqBL,QAArB,CAA8B,CAA9B,EAAgC,MAAhC,CAAvB;AACA,QAAIU,UAAU,GAAGvB,MAAM,GAAGwB,GAAT,CAAa;AAC1B,cAAQF,gBAAgB,CAACG,GAAjB,CAAqB,MAArB,CADkB;AAE1B,cAAQH,gBAAgB,CAACG,GAAjB,CAAqB,MAArB,CAFkB;AAG1B,cAAO,CAHmB;AAI1B,gBAAS,CAJiB;AAK1B,gBAAS,CALiB;AAM1B,qBAAc;AANY,KAAb,CAAjB;AAQAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,gBAAgB,CAACM,MAAjB,CAAwB,sBAAxB,CAAZ;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAU,CAACK,MAAX,CAAkB,sBAAlB,CAAZ;AACH;AACJ","sourcesContent":["import moment from 'moment';\n\nexport function getShiftTimeBoundries() {\n    let sixHundred = moment({hour: 6, minute: 0, seconds: 0}); \n    let eighteenHundred = moment({hour:18, minute:0, seconds:0});\n    let currentTime = moment(Date.now());\n    let shiftTimeBoundries = {\n            lowerBoundry:'',\n            upperBoundry:''\n    };\n    if (currentTime < sixHundred) {\n        shiftTimeBoundries.lowerBoundry = eighteenHundred.subtract(1, 'days').unix()*1000;\n        shiftTimeBoundries.upperBoundry = sixHundred.unix()*1000;\n        return shiftTimeBoundries;\n    } else if (currentTime >= sixHundred && currentTime < eighteenHundred ) {\n        shiftTimeBoundries.lowerBoundry = sixHundred.unix()*1000;\n        shiftTimeBoundries.upperBoundry = eighteenHundred.unix()*1000;\n        return shiftTimeBoundries;\n    } else {\n        shiftTimeBoundries.lowerBoundry = eighteenHundred.unix()*1000;\n        shiftTimeBoundries.upperBoundry = sixHundred.add(1, 'days').unix()*1000;\n        return shiftTimeBoundries;\n    }\n}\n\nexport function getWeekTimeBoundries(timeValue) {\n    let selectedDate = moment(timeValue);\n    let sixHundred = moment({hour: 6, minute: 0, seconds: 0});\n    let weekTimeBoundries = {\n        lowerBoundry:'',\n        upperBoundry:''\n    };\n    \n    if (selectedDate.isBefore(sixHundred) && selectedDate.day() === 0) {\n        // this is for before 06:00 on mondays.  Need to set week to previous week\n        let lowerPlaceholder = moment(selectedDate).subtract(7,'days');\n        let lowerBound = moment().set({\n            'year': lowerPlaceholder.get('year'),\n            'date': lowerPlaceholder.get('date'),\n            'hour':6,\n            'minute':0,\n            'second':0,\n            'millisecond':0\n        });\n        console.log(lowerPlaceholder.format(\"MMM-DD-YYYY hh:mm:ss\"));\n        console.log(lowerBound.format(\"MMM-DD-YYYY hh:mm:ss\"));\n    }\n}"]},"metadata":{},"sourceType":"module"}