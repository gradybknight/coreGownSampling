{"ast":null,"code":"import moment from 'moment';\nexport function getShiftTimeBoundries(timeValue) {\n  // returns time bounds as number\n  var sixHundred = moment({\n    hour: 6,\n    minute: 0,\n    seconds: 0\n  });\n  var eighteenHundred = moment({\n    hour: 6,\n    minute: 0,\n    seconds: 0\n  });\n  console.log(\"six: \".concat(sixHundred.format('MM/DD/YY hh:mm:ss')));\n  console.log(\"18: \".concat(eighteenHundred.format('MM/DD/YY hh:mm:ss')));\n  console.log(eighteenHundred.toObject());\n  var selectedTime = moment(timeValue);\n  var shiftTimeBoundries = {\n    lowerBoundry: '',\n    upperBoundry: ''\n  };\n\n  if (selectedTime < sixHundred) {\n    shiftTimeBoundries.lowerBoundry = eighteenHundred.subtract(1, 'days').unix() * 1000;\n    shiftTimeBoundries.upperBoundry = sixHundred.unix() * 1000;\n    shiftTimeBoundries.lowerBoundryReadable = moment(shiftTimeBoundries.lowerBoundry).format('DD-MMM-YYYY hh:mm:ss');\n    shiftTimeBoundries.upperBoundryReadable = moment(shiftTimeBoundries.upperBoundry).format('DD-MMM-YYYY hh:mm:ss');\n    return shiftTimeBoundries;\n  } else if (selectedTime >= sixHundred && selectedTime < eighteenHundred) {\n    shiftTimeBoundries.lowerBoundry = sixHundred.unix() * 1000;\n    shiftTimeBoundries.upperBoundry = eighteenHundred.unix() * 1000;\n    shiftTimeBoundries.lowerBoundryReadable = moment(shiftTimeBoundries.lowerBoundry).format('DD-MMM-YYYY hh:mm:ss');\n    shiftTimeBoundries.upperBoundryReadable = moment(shiftTimeBoundries.upperBoundry).format('DD-MMM-YYYY hh:mm:ss');\n    return shiftTimeBoundries;\n  } else {\n    shiftTimeBoundries.lowerBoundry = eighteenHundred.unix() * 1000;\n    shiftTimeBoundries.upperBoundry = sixHundred.add(1, 'days').unix() * 1000;\n    shiftTimeBoundries.lowerBoundryReadable = moment(shiftTimeBoundries.lowerBoundry).format('DD-MMM-YYYY hh:mm:ss');\n    shiftTimeBoundries.upperBoundryReadable = moment(shiftTimeBoundries.upperBoundry).format('DD-MMM-YYYY hh:mm:ss');\n    return shiftTimeBoundries;\n  }\n}\nexport function getWeekTimeBoundries(timeValue) {\n  console.log(timeValue);\n  var selectedDate = moment(timeValue);\n  var sixHundred = moment({\n    hour: 6,\n    minute: 0,\n    seconds: 0\n  });\n  var weekTimeBoundries = {\n    lowerBoundry: '',\n    upperBoundry: ''\n  };\n  console.log(\"selected date: \".concat(selectedDate.format(\"DD-MMM-YYYY hh:mm:ss\")));\n\n  if (selectedDate.isBefore(sixHundred) && selectedDate.day() === 0) {\n    console('before six'); // this is for before 06:00 on mondays.  Need to set week to previous week\n\n    var lowerPlaceholder = moment(selectedDate).subtract(7, 'days');\n    var lowerBoundry = moment().set({\n      'year': lowerPlaceholder.get('year'),\n      'months': lowerPlaceholder.get('months'),\n      'date': lowerPlaceholder.get('date'),\n      'hour': 6,\n      'minute': 0,\n      'second': 0,\n      'millisecond': 0\n    });\n    var upperBoundry = moment().set({\n      'year': selectedDate.get('year'),\n      'date': selectedDate.get('date'),\n      'months': selectedDate.get('months'),\n      'hour': 6,\n      'minute': 0,\n      'second': 0,\n      'millisecond': 0\n    });\n    weekTimeBoundries.lowerBoundry = lowerBoundry.unix() * 1000;\n    weekTimeBoundries.upperBoundry = upperBoundry.unix() * 1000;\n    return weekTimeBoundries;\n  } else {\n    console.log('after six'); // for anything after 0600 monday, set lower bound to 0600 monday of week\n    //    and upper bound to 0600 of next monday\n\n    var dayOfWeek = moment(selectedDate).day();\n    var dayOfWeekSubtractor = {};\n    var dayOfWeekAdder = {};\n\n    if (dayOfWeek === 0) {\n      dayOfWeekSubtractor = 6;\n      dayOfWeekAdder = 1;\n    } else {\n      dayOfWeekSubtractor = moment(selectedDate).day() - 1;\n      dayOfWeekAdder = 7 - dayOfWeekSubtractor;\n    }\n\n    console.log(\"subtractor: \".concat(dayOfWeekSubtractor, \", adder: \").concat(dayOfWeekAdder));\n\n    var _lowerPlaceholder = moment(selectedDate).subtract(dayOfWeekSubtractor, 'days');\n\n    var upperPlaceholder = moment(selectedDate).add(dayOfWeekAdder, 'days');\n\n    var _lowerBoundry = moment().set({\n      'year': _lowerPlaceholder.get('year'),\n      'monhts': _lowerPlaceholder.get('months'),\n      'date': _lowerPlaceholder.get('date'),\n      'hour': 6,\n      'minute': 0,\n      'second': 0,\n      'millisecond': 0\n    });\n\n    var _upperBoundry = moment().set({\n      'year': upperPlaceholder.get('year'),\n      'monhts': _lowerPlaceholder.get('months'),\n      'date': upperPlaceholder.get('date'),\n      'hour': 6,\n      'minute': 0,\n      'second': 0,\n      'millisecond': 0\n    });\n\n    weekTimeBoundries.lowerBoundry = _lowerBoundry.unix() * 1000;\n    weekTimeBoundries.upperBoundry = _upperBoundry.unix() * 1000;\n    weekTimeBoundries.lowerBoundryReadable = _lowerBoundry.format('DD-MMM-YYYY hh:mm:ss');\n    weekTimeBoundries.upperBoundryReadable = _upperBoundry.format('DD-MMM-YYYY hh:mm:ss');\n    return weekTimeBoundries;\n  }\n}","map":{"version":3,"sources":["/Users/gradyknight/Documents/code/activeProjects/coreGownSampling/src/api/timeManipulations.js"],"names":["moment","getShiftTimeBoundries","timeValue","sixHundred","hour","minute","seconds","eighteenHundred","console","log","format","toObject","selectedTime","shiftTimeBoundries","lowerBoundry","upperBoundry","subtract","unix","lowerBoundryReadable","upperBoundryReadable","add","getWeekTimeBoundries","selectedDate","weekTimeBoundries","isBefore","day","lowerPlaceholder","set","get","dayOfWeek","dayOfWeekSubtractor","dayOfWeekAdder","upperPlaceholder"],"mappings":"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","sourcesContent":["import moment from 'moment';\n\nexport function getShiftTimeBoundries(timeValue) { // returns time bounds as number\n    let sixHundred = moment({hour: 6, minute: 0, seconds: 0}); \n    let eighteenHundred = moment({hour: 6, minute:0, seconds:0});\n    console.log(`six: ${sixHundred.format('MM/DD/YY hh:mm:ss')}`)\n    console.log(`18: ${eighteenHundred.format('MM/DD/YY hh:mm:ss')}`)\n    console.log(eighteenHundred.toObject())\n    let selectedTime = moment(timeValue);\n    let shiftTimeBoundries = {\n            lowerBoundry:'',\n            upperBoundry:''\n    };\n    if (selectedTime < sixHundred) {\n        shiftTimeBoundries.lowerBoundry = eighteenHundred.subtract(1, 'days').unix()*1000;\n        shiftTimeBoundries.upperBoundry = sixHundred.unix()*1000;\n        shiftTimeBoundries.lowerBoundryReadable = moment(shiftTimeBoundries.lowerBoundry).format('DD-MMM-YYYY hh:mm:ss');\n        shiftTimeBoundries.upperBoundryReadable = moment(shiftTimeBoundries.upperBoundry).format('DD-MMM-YYYY hh:mm:ss');\n        return shiftTimeBoundries;\n    } else if (selectedTime >= sixHundred && selectedTime < eighteenHundred ) {\n        shiftTimeBoundries.lowerBoundry = sixHundred.unix()*1000;\n        shiftTimeBoundries.upperBoundry = eighteenHundred.unix()*1000;\n        shiftTimeBoundries.lowerBoundryReadable = moment(shiftTimeBoundries.lowerBoundry).format('DD-MMM-YYYY hh:mm:ss');\n        shiftTimeBoundries.upperBoundryReadable = moment(shiftTimeBoundries.upperBoundry).format('DD-MMM-YYYY hh:mm:ss');\n        return shiftTimeBoundries;\n    } else {\n        shiftTimeBoundries.lowerBoundry = eighteenHundred.unix()*1000;\n        shiftTimeBoundries.upperBoundry = sixHundred.add(1, 'days').unix()*1000;\n        shiftTimeBoundries.lowerBoundryReadable = moment(shiftTimeBoundries.lowerBoundry).format('DD-MMM-YYYY hh:mm:ss');\n        shiftTimeBoundries.upperBoundryReadable = moment(shiftTimeBoundries.upperBoundry).format('DD-MMM-YYYY hh:mm:ss');\n        return shiftTimeBoundries;\n    }\n}\n\nexport function getWeekTimeBoundries(timeValue) {\n    console.log(timeValue);\n    let selectedDate = moment(timeValue);\n    let sixHundred = moment({hour: 6, minute: 0, seconds: 0});\n    let weekTimeBoundries = {\n        lowerBoundry:'',\n        upperBoundry:''\n    };\n    console.log(`selected date: ${selectedDate.format(\"DD-MMM-YYYY hh:mm:ss\")}`);\n\n    if (selectedDate.isBefore(sixHundred) && selectedDate.day() === 0) {\n        console('before six');\n        // this is for before 06:00 on mondays.  Need to set week to previous week\n        let lowerPlaceholder = moment(selectedDate).subtract(7,'days');\n        let lowerBoundry = moment().set({\n            'year': lowerPlaceholder.get('year'),\n            'months':lowerPlaceholder.get('months'),\n            'date': lowerPlaceholder.get('date'),\n            'hour':6,\n            'minute':0,\n            'second':0,\n            'millisecond':0\n        });\n        let upperBoundry = moment().set({\n            'year': selectedDate.get('year'),\n            'date': selectedDate.get('date'),\n            'months': selectedDate.get('months'),\n            'hour':6,\n            'minute':0,\n            'second':0,\n            'millisecond':0\n        });\n        weekTimeBoundries.lowerBoundry = lowerBoundry.unix()*1000;\n        weekTimeBoundries.upperBoundry = upperBoundry.unix()*1000;\n        return weekTimeBoundries;\n    } else {\n        console.log('after six');\n        // for anything after 0600 monday, set lower bound to 0600 monday of week\n        //    and upper bound to 0600 of next monday\n        let dayOfWeek = moment(selectedDate).day();\n        let dayOfWeekSubtractor = {};\n        let dayOfWeekAdder = {};\n        if (dayOfWeek === 0) {\n            dayOfWeekSubtractor=6;\n            dayOfWeekAdder = 1;\n        } else {\n            dayOfWeekSubtractor = moment(selectedDate).day()-1;\n            dayOfWeekAdder = 7-dayOfWeekSubtractor;\n        }\n        console.log(`subtractor: ${dayOfWeekSubtractor}, adder: ${dayOfWeekAdder}`)\n        let lowerPlaceholder = moment(selectedDate).subtract(dayOfWeekSubtractor, 'days');\n        let upperPlaceholder = moment(selectedDate).add(dayOfWeekAdder, 'days');\n        let lowerBoundry = moment().set({\n            'year': lowerPlaceholder.get('year'),\n            'monhts':lowerPlaceholder.get('months'),\n            'date': lowerPlaceholder.get('date'),\n            'hour':6,\n            'minute':0,\n            'second':0,\n            'millisecond':0\n        });\n        let upperBoundry = moment().set({\n            'year': upperPlaceholder.get('year'),\n            'monhts':lowerPlaceholder.get('months'),\n            'date': upperPlaceholder.get('date'),\n            'hour':6,\n            'minute':0,\n            'second':0,\n            'millisecond':0\n        });\n        weekTimeBoundries.lowerBoundry = lowerBoundry.unix()*1000;\n        weekTimeBoundries.upperBoundry = upperBoundry.unix()*1000;\n        weekTimeBoundries.lowerBoundryReadable = lowerBoundry.format('DD-MMM-YYYY hh:mm:ss');\n        weekTimeBoundries.upperBoundryReadable = upperBoundry.format('DD-MMM-YYYY hh:mm:ss')\n        return weekTimeBoundries;\n    }\n}"]},"metadata":{},"sourceType":"module"}