{"ast":null,"code":"import * as types from './actionTypes';\nimport axios from 'axios';\nimport { beginAjaxCall, ajaxCallError } from './ajaxStatusActions';\nexport function addUser(user) {\n  return {\n    type: types.ADD_USER,\n    user: user\n  };\n}\n;\nexport function getAllKnownUsersSuccess(payload) {\n  return {\n    type: types.GET_ALL_KNOWN_USERS_SUCCESS,\n    payload: payload\n  };\n}\n;\nexport function getAllKnownUsers() {\n  return function (dispatch) {\n    dispatch(beginAjaxCall());\n    axios.get('http://50.19.1.144:3000/getallknownusers').then(function (response) {\n      console.log(response.data);\n      var payload = response.data;\n      dispatch(getAllKnownUsersSuccess(payload));\n    }).catch(function (error) {\n      dispatch(ajaxCallError());\n      throw error;\n    });\n  };\n}\n;","map":{"version":3,"sources":["/Users/gradyknight/Documents/code/activeProjects/coreGownSampling/src/actions/userActions.js"],"names":["types","axios","beginAjaxCall","ajaxCallError","addUser","user","type","ADD_USER","getAllKnownUsersSuccess","payload","GET_ALL_KNOWN_USERS_SUCCESS","getAllKnownUsers","dispatch","get","then","response","console","log","data","catch","error"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,eAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,EAAuBC,aAAvB,QAA2C,qBAA3C;AAEA,OAAO,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;AAC1B,SAAO;AAAEC,IAAAA,IAAI,EAAEN,KAAK,CAACO,QAAd;AAAwBF,IAAAA,IAAI,EAACA;AAA7B,GAAP;AACH;AAAA;AAED,OAAO,SAASG,uBAAT,CAAiCC,OAAjC,EAA0C;AAC7C,SAAO;AAACH,IAAAA,IAAI,EAACN,KAAK,CAACU,2BAAZ;AAAyCD,IAAAA,OAAO,EAAPA;AAAzC,GAAP;AACH;AAAA;AAED,OAAO,SAASE,gBAAT,GAA4B;AAC/B,SAAO,UAAUC,QAAV,EAAoB;AACvBA,IAAAA,QAAQ,CAACV,aAAa,EAAd,CAAR;AACAD,IAAAA,KAAK,CAACY,GAAN,CAAU,0CAAV,EACKC,IADL,CACU,UAACC,QAAD,EAAc;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,UAAIT,OAAO,GAAGM,QAAQ,CAACG,IAAvB;AACAN,MAAAA,QAAQ,CAACJ,uBAAuB,CAACC,OAAD,CAAxB,CAAR;AACH,KALL,EAMKU,KANL,CAMW,UAAAC,KAAK,EAAI;AACZR,MAAAA,QAAQ,CAACT,aAAa,EAAd,CAAR;AACA,YAAMiB,KAAN;AACH,KATL;AAUH,GAZD;AAaH;AAAA","sourcesContent":["import * as types from './actionTypes';\nimport axios from 'axios';\nimport {beginAjaxCall, ajaxCallError} from './ajaxStatusActions';\n\nexport function addUser(user) {\n    return { type: types.ADD_USER, user:user}\n};\n\nexport function getAllKnownUsersSuccess(payload) {\n    return {type:types.GET_ALL_KNOWN_USERS_SUCCESS, payload};\n};\n\nexport function getAllKnownUsers() {\n    return function (dispatch) {\n        dispatch(beginAjaxCall());\n        axios.get('http://50.19.1.144:3000/getallknownusers')\n            .then((response) => {\n                console.log(response.data);\n                let payload = response.data;\n                dispatch(getAllKnownUsersSuccess(payload));\n            })\n            .catch(error => {\n                dispatch(ajaxCallError());\n                throw(error);\n            });\n    };\n};\n\n"]},"metadata":{},"sourceType":"module"}