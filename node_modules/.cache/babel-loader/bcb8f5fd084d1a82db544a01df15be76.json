{"ast":null,"code":"import _classCallCheck from \"/Users/gradyknight/Documents/code/activeProjects/coreGownSampling/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gradyknight/Documents/code/activeProjects/coreGownSampling/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gradyknight/Documents/code/activeProjects/coreGownSampling/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gradyknight/Documents/code/activeProjects/coreGownSampling/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gradyknight/Documents/code/activeProjects/coreGownSampling/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gradyknight/Documents/code/activeProjects/coreGownSampling/src/components/UserValidNewCoreEntry.js\";\nimport React from 'react';\nimport { Button } from 'reactstrap';\nimport * as transactionManipulations from '../api/transactionManipulations';\n\nvar UserValidNewCoreEntry =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserValidNewCoreEntry, _React$Component);\n\n  function UserValidNewCoreEntry() {\n    _classCallCheck(this, UserValidNewCoreEntry);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UserValidNewCoreEntry).apply(this, arguments));\n  }\n\n  _createClass(UserValidNewCoreEntry, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          transactions = _this$props.transactions,\n          initials = _this$props.initials,\n          logInNewEntry = _this$props.logInNewEntry,\n          timeBoundry = _this$props.timeBoundry;\n      var currentTime = Date.now();\n      var weekBoundries = {\n        lowerBoundry: timeBoundry.lowerBoundry,\n        upperBoundry: timeBoundry.upperBoundry\n      };\n      var entriesInformation = transactionManipulations.countOfEntriesByDay(initials, transactions, weekBoundries);\n      var numberOfDaysWithAnEntryThisWeek = transactionManipulations.numberOfEntryDays(entriesInformation);\n      var hasValidGloveSampleForToday = transactionManipulations.forTimePointAndUserIsThereGloveSample(initials, transactions, currentTime);\n      var numberOfGownSamplesThisWeek = transactionManipulations.countOfGownSamplesInTimePeriodForUser(initials, transactions, weekBoundries);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, initials), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, initials, \" has entered the core \", numberOfDaysWithAnEntryThisWeek, \" times this week\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, initials, \" has \", numberOfGownSamplesThisWeek, \" valid gown samples this week\"), hasValidGloveSampleForToday ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, initials, \" has a valid glove sample in +/- 12 hours from \", currentTime) : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, initials, \" does not have a valid glove sample in +/- 12 hours from \", currentTime), React.createElement(Button, {\n        color: \"primary\",\n        onClick: logInNewEntry,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Log \", initials, \" in to core\"));\n    }\n  }]);\n\n  return UserValidNewCoreEntry;\n}(React.Component);\n\nexport { UserValidNewCoreEntry as default };","map":{"version":3,"sources":["/Users/gradyknight/Documents/code/activeProjects/coreGownSampling/src/components/UserValidNewCoreEntry.js"],"names":["React","Button","transactionManipulations","UserValidNewCoreEntry","props","transactions","initials","logInNewEntry","timeBoundry","currentTime","Date","now","weekBoundries","lowerBoundry","upperBoundry","entriesInformation","countOfEntriesByDay","numberOfDaysWithAnEntryThisWeek","numberOfEntryDays","hasValidGloveSampleForToday","forTimePointAndUserIsThereGloveSample","numberOfGownSamplesThisWeek","countOfGownSamplesInTimePeriodForUser","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAO,KAAKC,wBAAZ,MAA0C,iCAA1C;;IAGqBC,qB;;;;;;;;;;;;;6BAGR;AAAA,wBACwD,KAAKC,KAD7D;AAAA,UACEC,YADF,eACEA,YADF;AAAA,UACgBC,QADhB,eACgBA,QADhB;AAAA,UAC0BC,aAD1B,eAC0BA,aAD1B;AAAA,UACyCC,WADzC,eACyCA,WADzC;AAEL,UAAIC,WAAW,GAAGC,IAAI,CAACC,GAAL,EAAlB;AACA,UAAIC,aAAa,GAAG;AAChBC,QAAAA,YAAY,EAACL,WAAW,CAACK,YADT;AAEhBC,QAAAA,YAAY,EAACN,WAAW,CAACM;AAFT,OAApB;AAIA,UAAIC,kBAAkB,GAAGb,wBAAwB,CAACc,mBAAzB,CAA6CV,QAA7C,EAAsDD,YAAtD,EAAmEO,aAAnE,CAAzB;AACA,UAAIK,+BAA+B,GAAGf,wBAAwB,CAACgB,iBAAzB,CAA2CH,kBAA3C,CAAtC;AACA,UAAII,2BAA2B,GAAGjB,wBAAwB,CAACkB,qCAAzB,CAA+Dd,QAA/D,EAAwED,YAAxE,EAAqFI,WAArF,CAAlC;AACA,UAAIY,2BAA2B,GAAGnB,wBAAwB,CAACoB,qCAAzB,CAA+DhB,QAA/D,EAAwED,YAAxE,EAAqFO,aAArF,CAAlC;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKN,QAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,QAAJ,4BAAoCW,+BAApC,qBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIX,QAAJ,WAAmBe,2BAAnB,kCAHJ,EAIKF,2BAA2B,GAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIb,QAAJ,qDAA6DG,WAA7D,CAAD,GAA+E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIH,QAAJ,+DAAuEG,WAAvE,CAJ/G,EAQI,oBAAC,MAAD;AACI,QAAA,KAAK,EAAC,SADV;AAEI,QAAA,OAAO,EAAEF,aAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAISD,QAJT,gBARJ,CADJ;AAiBL;;;;EA/BgDN,KAAK,CAACuB,S;;SAApCpB,qB","sourcesContent":["import React from 'react';\nimport { Button } from 'reactstrap';\nimport * as transactionManipulations from '../api/transactionManipulations';\n\n\nexport default class UserValidNewCoreEntry extends React.Component {\n  \n  \n    render() {\n        const {transactions, initials, logInNewEntry, timeBoundry} = this.props;\n        let currentTime = Date.now();\n        let weekBoundries = {\n            lowerBoundry:timeBoundry.lowerBoundry,\n            upperBoundry:timeBoundry.upperBoundry\n        }\n        let entriesInformation = transactionManipulations.countOfEntriesByDay(initials,transactions,weekBoundries);\n        let numberOfDaysWithAnEntryThisWeek = transactionManipulations.numberOfEntryDays(entriesInformation);\n        let hasValidGloveSampleForToday = transactionManipulations.forTimePointAndUserIsThereGloveSample(initials,transactions,currentTime);\n        let numberOfGownSamplesThisWeek = transactionManipulations.countOfGownSamplesInTimePeriodForUser(initials,transactions,weekBoundries);\n        return (\n            <div>\n                <h3>{initials}</h3> \n                <p>{initials} has entered the core {numberOfDaysWithAnEntryThisWeek} times this week</p>\n                <p>{initials} has {numberOfGownSamplesThisWeek} valid gown samples this week</p>\n                {hasValidGloveSampleForToday?<p>{initials} has a valid glove sample in +/- 12 hours from {currentTime}</p>:<p>{initials} does not have a valid glove sample in +/- 12 hours from {currentTime}</p>}\n                \n                \n                \n                <Button \n                    color=\"primary\"\n                    onClick={logInNewEntry}\n                >\n                    Log {initials} in to core\n                </Button>\n            </div>\n        );\n  }\n}"]},"metadata":{},"sourceType":"module"}