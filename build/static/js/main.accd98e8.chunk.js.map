{"version":3,"sources":["actions/actionTypes.js","reducers/initialState.js","reducers/index.js","reducers/userReducer.js","reducers/transactionReducer.js","reducers/ajaxStatusReducer.js","reducers/timeBoundryReducer.js","store/configureStore.js","actions/ajaxStatusActions.js","actions/transactionActions.js","components/UsersInCore.js","components/UserDropdown.js","components/UserIsAlreadyInCore.js","api/transactionManipulations.js","components/UserValidNewCoreEntry.js","containers/LogUserInToCoreContainer.js","components/ExitCore/UsersInCoreSelecter.js","components/ExitCore/UsersTransactions.js","components/ExitCore/UserExitCoreSummaryCard.js","containers/ExitCore.js","containers/TabBarContainer.js","App.js","actions/userActions.js","api/timeManipulations.js","actions/timeBoundryActions.js","serviceWorker.js","index.js"],"names":["GET_USERS_IN_CORE_SUCCESS","GET_TRANSACTIONS_IN_TIME_PERIOD_SUCCESS","CLEAR_EXISTING_ENTRY_SUCCESS","LOG_NEW_ENTRY_SUCCESS","LOG_EXIT_SUCCESS","BEGIN_AJAX_CALL","AJAX_CALL_ERROR","SET_TIME_BOUNDRY","SET_OVERALL_TIME_BOUNDRIES","GET_ALL_KNOWN_USERS_SUCCESS","ADD_USER","reducers_initialState","transactions","users","ajaxCallsInProgress","timeBoundries","lowerTimeBoundry","upperTimeBoundry","rootReducer","combineReducers","state","arguments","length","undefined","action","type","types","console","log","user","Object","toConsumableArray","concat","assign","payload","initialState","apply","substring","timeBoundry","composeEnhancers","composeWithDevTools","beginAjaxCall","ajaxCallError","getUsersInCoreSuccess","getUsersInCore","dispatch","axios","get","then","response","data","catch","error","getTransactionsInTimePeriodSuccess","getTransactionsInTimePeriod","post","logNewEntrySuccess","logNewEntry","newEntryTransaction","clearExistingEntrySuccess","clearExistingEntry","existingTransactionID","logExitSuccess","logExit","newExitTransaction","UsersInCore","usersInCore","this","props","filter","transaction","exittimestamp","react_default","a","createElement","reactstrap_es","map","index","formattedTime","moment","unix","entrytimestamp","format","key","initials","React","Component","UserDropdown","for","name","id","onChange","updateSelection","knownInitials","UserIsAlreadyInCore","color","onClick","logInNewEntry","allTransactionsForUserInTimePeriod","timePeriod","lowerBoundry","upperBoundry","countOfGownSamplesInTimePeriodForUser","gownCount","forEach","gown","truncateTimeFromMomentObjectAndReturnMoment","momentTimeObject","placeholder","toObject","set","year","months","month","date","hour","minute","second","millisecond","countOfEntriesByDay","usersTransactions","minDay","numberOfDaysInTimePeriod","diff","returnedArray","_loop","i","testedDate","add","counter","dateSummaryObject","dateAsEpoch","entries","truncatedTransactionDate","isSame","dateFormated","push","numberOfEntryDays","arrayFromCountOfEntriesByDay","entryDayCounter","entry","forTimePointAndUserIsThereGloveSample","timePoint","timePointAsMoment","subtract","glove","UserValidNewCoreEntry","_this$props","currentTime","Date","now","weekBoundries","numberOfDaysWithAnEntryThisWeek","transactionManipulations","hasValidGloveSampleForToday","numberOfGownSamplesThisWeek","hasValidGownSamples","LogUsersInToCore","context","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","selectedUser","selectedUserIsInCore","selectedUsersEntryTransactionID","bind","assertThisInitialized","isSelectedUserInCore","relogInUserAlreadyInCore","normalNewEntry","event","setState","target","value","informationForSelectedUser","_this2","enteringPerson","team","transactionActions","_this3","md","size","offset","UserDropdown_UserDropdown","UserIsAlreadyInCore_UserIsAlreadyInCore","UserValidNewCoreEntry_UserValidNewCoreEntry","UsersInCore_UsersInCore","connect","ownProps","bindActionCreators","UsersInCoreSelecter","UsersTransactions","entryTime","exitTime","UserExitCoreSummaryCard","exitTheCore","selectedGown","selectedGloves","clickedGown","clickedGloves","gownButtonColor","gloveButtonColor","buttonColor","sm","ExitCore","selectedGownSamples","selectedGloveSamples","exitTransaction","currentState","selectedUsersTransactions","UsersInCoreSelecter_UsersInCoreSelecter","UserExitCoreSummaryCard_UserExitCoreSummaryCard","UsersTransactions_UsersTransactions","Example","toggle","activeTab","tab","tabs","className","classnames","active","tabId","LogUserInToCoreContainer","body","containers_ExitCore","store","createStore","applyMiddleware","thunk","getAllKnownUsersSuccess","shiftBoundry","timeValue","sixHundred","seconds","eighteenHundred","selectedTime","shiftTimeBoundries","lowerBoundryReadable","upperBoundryReadable","timeManipulations","weekBoundry","selectedDate","weekTimeBoundries","isBefore","day","lowerPlaceholder","dayOfWeekSubtractor","dayOfWeekAdder","upperPlaceholder","monhts","shiftLowerBoundryReadable","shiftUpperBoundryReadable","shiftLowerBoundry","shiftUpperBoundry","setOverallTimeBoundries","getState","App","react_redux_es","TabBarContainer_Example","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.accd98e8.chunk.js","sourcesContent":["// Transaction calls\nexport const GET_USERS_IN_CORE_SUCCESS = 'GET_USERS_IN_CORE_SUCCESS'\nexport const GET_TRANSACTIONS_IN_TIME_PERIOD_SUCCESS = 'GET_TRANSACTIONS_IN_TIME_PERIOD_SUCCESS'\nexport const CLEAR_EXISTING_ENTRY_SUCCESS = 'CLEAR_EXISTING_ENTRY_SUCCESS'\nexport const LOG_NEW_ENTRY_SUCCESS = 'LOG_NEW_ENTRY_SUCCESS'\nexport const LOG_EXIT_SUCCESS = 'LOG_EXIT_SUCCESS'\n\n// AJAX call tracking\nexport const BEGIN_AJAX_CALL = 'BEGIN_AJAX_CALL';\nexport const AJAX_CALL_ERROR = 'AJAX_CALL_ERROR';\n\n// Time boundry book keeping\nexport const SET_TIME_BOUNDRY = 'SET_TIME_BOUNDRY';\nexport const SET_OVERALL_TIME_BOUNDRIES = 'SET_OVERALL_TIME_BOUNDRIES'\n\n\n\n//Below is not used\n// user actions -- list all known users, modify user's information\nexport const MODIFY_USERS_INFORMATION = 'MODIFY_USERS_INFORMATION';\nexport const GET_ALL_KNOWN_USERS_SUCCESS = 'GET_ALL_KNOWN_USERS_SUCCESS';\nexport const ADD_USER = 'ADD_USER'\n\n// transaction actions -- entering core, exiting core, querrying a week's transactions\nexport const USER_ENTERS_CORE = 'USER_ENTERS_CORE';\nexport const USER_EXITS_CORE = 'USER_EXITS_CORE';\nexport const GET_WEEKS_TRANSACTIONS = 'GET_WEEKS_TRANSACTIONS';","export default {\n    transactions: [],\n    users: [],\n    ajaxCallsInProgress: 0,\n    timeBoundries:{\n      lowerTimeBoundry:'',\n      upperTimeBoundry:''\n  }\n}\n  ","import {combineReducers} from 'redux';\nimport users from './userReducer';\nimport transactions from './transactionReducer';\nimport ajaxCallsInProgress from './ajaxStatusReducer';\nimport timeBoundry from './timeBoundryReducer';\n\nconst rootReducer = combineReducers({\n    users,\n    transactions,\n    ajaxCallsInProgress,\n    timeBoundry\n});\n\nexport default rootReducer;","import * as types from '../actions/actionTypes';\n\nexport default function userReducer(state = [], action) {\n    switch(action.type) {\n        case types.ADD_USER:\n            console.log(action.user);    \n            return [...state,\n                Object.assign({}, action.user)\n            ];\n        case types.GET_ALL_KNOWN_USERS_SUCCESS:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import * as types from '../actions/actionTypes';\nimport initialState from './initialState';\n\nexport default function transactionReducer(state = initialState.transactions, action) {\n    switch(action.type) {\n        case types.GET_USERS_IN_CORE_SUCCESS:\n            return [ ...state,\n                Object.assign({}, ...action.payload)\n            ];\n\n        case types.GET_TRANSACTIONS_IN_TIME_PERIOD_SUCCESS:\n            return [\n                ...action.payload\n            ];\n        default:\n            return state;\n    }\n}","import * as types from '../actions/actionTypes';\nimport initialState from './initialState';\n\nfunction actionTypeEndsInSuccess(type) {\n  return type.substring(type.length - 8) === '_SUCCESS';\n}\n\nexport default function ajaxStatusReducer(state = initialState.ajaxCallsInProgress, action) {\n  if (action.type === types.BEGIN_AJAX_CALL) {\n    return state + 1;\n  } else if (action.type === types.AJAX_CALL_ERROR || actionTypeEndsInSuccess(action.type)) {\n    return state - 1;\n  }\n\n  return state;\n}\n","import * as types from '../actions/actionTypes';\nimport initialState from './initialState';\n\nexport default function timeBoundryReducer(state = initialState.timeBoundries, action) {\n    switch(action.type) {\n        case types.SET_TIME_BOUNDRY:\n            return Object.assign({}, action.payload);\n        case types.SET_OVERALL_TIME_BOUNDRIES:\n            return Object.assign({}, action.payload);\n        default:\n            return state;\n    }\n}\n","import {createStore, applyMiddleware} from 'redux';\nimport rootReducer from '../reducers';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\n\nconst composeEnhancers = composeWithDevTools({\n    // Specify name here, actionsBlacklist, actionsCreators and other options if needed\n  });\n\nexport default function configureStore(initialState) {\n    return createStore(\n        rootReducer,\n        initialState,\n        composeEnhancers(\n            applyMiddleware(thunk)\n        )\n    );\n}","import * as types from './actionTypes';\n\nexport function beginAjaxCall() {\n  return {type: types.BEGIN_AJAX_CALL};\n}\n\nexport function ajaxCallError() {\n  return {type: types.AJAX_CALL_ERROR};\n}\n","import * as types from './actionTypes';\nimport axios from 'axios';\nimport {beginAjaxCall, ajaxCallError} from './ajaxStatusActions';\n\nexport function getUsersInCoreSuccess(payload) {\n    return ({type: types.GET_USERS_IN_CORE_SUCCESS, payload});\n};\nexport function getUsersInCore(){\n    return function (dispatch) {\n        dispatch(beginAjaxCall());\n        axios.get('http://50.19.1.144:3000/usersincore')\n            .then(function (response) {\n                let payload = response.data;\n                dispatch(getUsersInCoreSuccess(payload));\n            })\n            .catch(error => {\n                dispatch(ajaxCallError());\n                throw(error);\n            });\n    };\n};\n\nexport function getTransactionsInTimePeriodSuccess(payload){\n    return ({type: types.GET_TRANSACTIONS_IN_TIME_PERIOD_SUCCESS, payload});\n};\nexport function getTransactionsInTimePeriod(timeBoundries){\n    return function (dispatch) {\n        dispatch(beginAjaxCall());\n        axios.post('http://50.19.1.144:3000/transactionsintimeperiod', timeBoundries)\n            .then(function (response) {\n                let payload = response.data;\n                dispatch(getTransactionsInTimePeriodSuccess(payload));\n            })\n            .catch(error => {\n                dispatch(ajaxCallError());\n                throw(error);\n            });\n    }; \n};\n\nexport function logNewEntrySuccess(payload) {\n    return ({type: types.LOG_NEW_ENTRY_SUCCESS, payload});\n}\nexport function logNewEntry(newEntryTransaction) {\n    return function (dispatch) {\n        dispatch(beginAjaxCall());\n        console.log('called new entry procedure')\n        axios.post('http://50.19.1.144:3000/newentry', newEntryTransaction)\n            .then(function (response) {\n                console.log('response from new entry')\n                let payload = response.data;\n                dispatch(logNewEntrySuccess(payload));\n            })\n            .catch(error => {\n                dispatch(ajaxCallError());\n                throw(error);\n            });\n    }; \n};\n\nexport function clearExistingEntrySuccess(payload){\n    return ({type: types.CLEAR_EXISTING_ENTRY_SUCCESS, payload});\n};\nexport function clearExistingEntry(existingTransactionID){\n    return function(dispatch) {\n        dispatch(beginAjaxCall());\n        axios.post('http://50.19.1.144:3000/systemclearedtransaction', existingTransactionID)\n            .then(response =>{\n                console.log('got response from clearing existing')\n                let payload = response;\n                dispatch(clearExistingEntrySuccess(payload));\n            })\n            .catch(error => {\n                dispatch(ajaxCallError());\n                throw(error);\n            });\n    };\n};\n\nexport function logExitSuccess(payload) {\n    return ({type: types.LOG_EXIT_SUCCESS, payload});\n}\nexport function logExit(newExitTransaction) {\n    return function (dispatch) {\n        dispatch(beginAjaxCall());\n        console.log('called new entry procedure')\n        axios.post('http://50.19.1.144:3000/newexit', newExitTransaction)\n            .then(function (response) {\n                console.log('response from new entry')\n                let payload = response.data;\n                dispatch(logExitSuccess(payload));\n            })\n            .catch(error => {\n                dispatch(ajaxCallError());\n                throw(error);\n            });\n    }; \n};","import React from 'react';\nimport { Table } from 'reactstrap';\nimport moment from 'moment'\n\nexport default class UsersInCore extends React.Component {\n  render() {\n    let usersInCore = this.props.transactions.filter(transaction => transaction.exittimestamp === null);\n    return (\n      <Table>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Initials</th>\n            <th>Entered Core</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {usersInCore.map((user, index) => {\n            let m = moment.unix(user.entrytimestamp/1000);\n            let formattedTime = m.format('DD-MMM-YYYY hh:mm:ss');\n            return(\n              <tr key = {index}>\n                <td>{index+1}</td>\n                <td>{user.initials}</td>\n                <td>{formattedTime}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    );\n  }\n}","import React from 'react';\nimport { FormGroup, Label, Input } from 'reactstrap';\n\nexport default class UserDropdown extends React.Component {\n  \n  \n    render() {\n    return (\n        <FormGroup>\n            <Label for=\"exampleSelect\">Select initials of person to log in to core:</Label>\n            <Input \n                type=\"select\" \n                name=\"select\" \n                id=\"exampleSelect\"\n                onChange = {this.props.updateSelection}\n            >\n            <option key = {9999} id={9999}></option>\n            {this.props.knownInitials.map((initials, index)=>{\n                return(<option key = {index} id={index} >{initials}</option>)\n            })}\n            </Input>\n        </FormGroup>\n    );\n  }\n}","import React from 'react';\nimport { Button } from 'reactstrap';\n\nexport default class UserIsAlreadyInCore extends React.Component {\n  \n  \n    render() {\n    return (\n        <div>\n            <h3>{this.props.initials} is already in the core</h3> \n            <Button \n                color=\"danger\"\n                onClick={this.props.logInNewEntry}\n            >\n                Clear existing entry and log new\n            </Button>\n        </div>\n    );\n  }\n}","import moment from 'moment';\n// Business rules\n// A) Glove sample every day:\n//    1. countOfGloveSamplesInTimePeriodForUser(pass in shiftBoundry as timePeriod)\n// B) Gown samples \n//    1. if >= two days of entries then 2 gown samples\n//        a. countOfEntriesByDay(pass in weekBoundry)\n//        b. .numberOfEntryDays(array from 1a) --> number of entries\n//        c. countOfGloveSamplesInTimePeriodForUser(pass in weekBoundry) --> number of gown samples taken\nexport function allTransactionsForUserInTimePeriod(initials, transactions, timePeriod) {  //returns array of transactions\n    let matchingTransactions = transactions.filter(transaction => transaction.initials === initials)\n                                            .filter(transaction => (transaction.entrytimestamp >= timePeriod.lowerBoundry && transaction.entrytimestamp < timePeriod.upperBoundry));\n    return matchingTransactions;\n};\nexport function userIsCurrentlyLoggedAsInCore(initials, transactions) { //returns boolean\n    let matchingTransactions = transactions.filter(transaction => transaction.initials === initials)\n                                            .filter(transaction => transaction.exittimestamp === null);\n    if (matchingTransactions.length > 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\nexport function usersInCore(transactions) { //returns array of initials\n    let usersInCore = transactions.filter(transaction => transaction.exittimestamp === null)\n                                    .map(transaction => transaction.initials);\n    return usersInCore;\n\n}\nexport function countOfGownSamplesInTimePeriodForUser(initials, transactions, timePeriod) { //returns count as integer\n    let gownCount = 0;\n    allTransactionsForUserInTimePeriod(initials, transactions, timePeriod).forEach(transaction =>{\n        gownCount=gownCount + transaction.gown;\n    });\n    return gownCount;\n}\nexport function countOfGloveSamplesInTimePeriodForUser(initials, transactions, timePeriod) { //returns count as integer\n    var gloveCount = 0;\n    allTransactionsForUserInTimePeriod(initials, transactions, timePeriod).forEach(transaction =>{\n        gloveCount = gloveCount + transaction.glove;\n        console.log(transaction);\n    });\n    return gloveCount;\n}\nexport function truncateTimeFromMomentObjectAndReturnMoment(momentTimeObject) { // moment.js object\n    let placeholder = momentTimeObject.toObject();\n    let returnedMomentTimeObject = moment().set({\n        'year': placeholder.year,\n        'months': placeholder.month,\n        'date': placeholder.date,\n        'hour':0,\n        'minute':0,\n        'second':0,\n        'millisecond':0\n    });\n    return returnedMomentTimeObject;\n}\nexport function countOfEntriesByDay(initials, transactions, timePeriod) { // array of {date as epochTime, entryCount}\n    let usersTransactions = allTransactionsForUserInTimePeriod(initials,transactions, timePeriod);\n    let minDay = truncateTimeFromMomentObjectAndReturnMoment(moment(timePeriod.lowerBoundry));\n    let maxDay = truncateTimeFromMomentObjectAndReturnMoment(moment(timePeriod.upperBoundry));\n    let numberOfDaysInTimePeriod = maxDay.diff(minDay,\"days\");\n    let returnedArray = []\n    for (let i = 0; i <= numberOfDaysInTimePeriod; i++) {\n        // moment objects are muteable.  holder date is a temp holder which gets mutated\n        let holderDay = truncateTimeFromMomentObjectAndReturnMoment(minDay);\n        let testedDate = holderDay.add(i,'days');\n        let counter = 0;\n        let dateSummaryObject = {dateAsEpoch:'',entries:0}\n        usersTransactions.forEach(transaction => {\n            let truncatedTransactionDate = truncateTimeFromMomentObjectAndReturnMoment(moment(transaction.entrytimestamp));\n            if (testedDate.isSame(truncatedTransactionDate)) {\n                counter++;\n            } \n        });\n        dateSummaryObject.dateAsEpoch = testedDate.unix()*1000;\n        dateSummaryObject.dateFormated = testedDate.format(\"DD-MMM-YYYY\");\n        dateSummaryObject.entries = counter;\n        returnedArray.push(dateSummaryObject);\n    }\n    return returnedArray;\n}\nexport function numberOfEntryDays(arrayFromCountOfEntriesByDay) { // returns count of number of days entering core\n    let entryDayCounter = 0;\n    arrayFromCountOfEntriesByDay.forEach(entry => {\n        if (entry.entries > 0) {\n            entryDayCounter++;\n        }\n    });\n    return entryDayCounter;\n}\nexport function forTimePointAndUserIsThereGloveSample(initials, transactions, timePoint) { //returns boolean\n    let timePointAsMoment = moment(timePoint);\n    let timePeriod = {\n        lowerBoundry: timePointAsMoment.subtract(12,'hours').unix()*1000,\n        upperBoundry: timePointAsMoment.add(12,'hours').unix()*1000\n    }\n    let usersTransactionsWithGloveSamples = allTransactionsForUserInTimePeriod(initials,transactions, timePeriod).filter(transaction => transaction.glove > 0);\n    if (usersTransactionsWithGloveSamples.length > 0) {\n        return true\n    } else {\n        return false\n    }\n    \n}\n","import React from 'react';\nimport { Button, Alert } from 'reactstrap';\nimport * as transactionManipulations from '../api/transactionManipulations';\nimport moment from 'moment';\n\n\nexport default class UserValidNewCoreEntry extends React.Component {\n  \n  \n    render() {\n        const {transactions, initials, logInNewEntry, timeBoundry} = this.props;\n        let currentTime = Date.now();\n        let weekBoundries = {\n            lowerBoundry:timeBoundry.lowerBoundry,\n            upperBoundry:timeBoundry.upperBoundry\n        }\n        let entriesInformation = transactionManipulations.countOfEntriesByDay(initials,transactions,weekBoundries);\n        let numberOfDaysWithAnEntryThisWeek = transactionManipulations.numberOfEntryDays(entriesInformation);\n        let hasValidGloveSampleForToday = transactionManipulations.forTimePointAndUserIsThereGloveSample(initials,transactions,currentTime);\n        let numberOfGownSamplesThisWeek = transactionManipulations.countOfGownSamplesInTimePeriodForUser(initials,transactions,weekBoundries);\n        let hasValidGownSamples = false;\n        if (numberOfDaysWithAnEntryThisWeek <= 1) {\n            hasValidGownSamples = false;\n        } else if (numberOfDaysWithAnEntryThisWeek >= 2){\n            if (numberOfGownSamplesThisWeek >=2) {\n                hasValidGownSamples = true;\n            } else {\n                hasValidGownSamples = false;\n            }\n        } \n        return (\n            <div>\n                <h3>{initials}</h3> \n                <p>\n                    {initials} has entered the core {numberOfDaysWithAnEntryThisWeek} times this week <br/>\n                    {initials} has {numberOfGownSamplesThisWeek} valid gown samples this week\n                </p>\n                    {hasValidGloveSampleForToday?<div>{initials} has a valid glove sample in +/- 12 hours from {currentTime}</div>:<div>{initials} does not have a valid glove sample in +/- 12 hours from {moment(currentTime).format('DDMMMYY HH:mm:ss')}</div>}\n                {hasValidGloveSampleForToday?<Alert color='success'>Gloves are good</Alert>:<Alert color='danger'>Need glove samples </Alert>}\n                {hasValidGownSamples?<Alert color='success'>Gown samples are good</Alert>:<Alert color='danger'>Need gown samples </Alert>}\n                <Button \n                    color=\"primary\"\n                    onClick={logInNewEntry}\n                >\n                    Log {initials} in to core\n                </Button>\n            </div>\n        );\n  }\n}","import React from 'react';\nimport {connect} from 'react-redux';\nimport * as transactionActions from '../actions/transactionActions';\nimport {bindActionCreators} from 'redux';\nimport UsersInCore from '../components/UsersInCore';\nimport UserDropdown from '../components/UserDropdown';\nimport { Container, Row, Col, Card } from 'reactstrap';\nimport UserIsAlreadyInCore from '../components/UserIsAlreadyInCore';\nimport UserValidNewCoreEntry from '../components/UserValidNewCoreEntry';\n\n\nclass LogUsersInToCore extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            selectedUser:'',\n            selectedUserIsInCore:false,\n            selectedUsersEntryTransactionID:''\n        };\n        this.updateSelection = this.updateSelection.bind(this);\n        this.isSelectedUserInCore = this.isSelectedUserInCore.bind(this);\n        this.relogInUserAlreadyInCore = this.relogInUserAlreadyInCore.bind(this);\n        this.normalNewEntry = this.normalNewEntry.bind(this);\n\n    }   \n\n    updateSelection(event) {\n        this.setState({\n            selectedUser:event.target.value\n        });\n        this.isSelectedUserInCore(event.target.value);\n    }\n\n    isSelectedUserInCore(selectedUser) {\n        let arrayOfUsersInCore = this.props.transactions.filter(transaction => transaction.exittimestamp===null);\n        let informationForSelectedUser = arrayOfUsersInCore.filter(user => user.initials === selectedUser);\n        if (informationForSelectedUser.length === 0) {\n            this.setState({\n                selectedUserIsInCore:false,\n                selectedUsersEntryTransactionID:''\n            })\n            return false;\n        } else {\n            this.setState({\n                selectedUserIsInCore:true,\n                selectedUsersEntryTransactionID:informationForSelectedUser[0].id\n            })\n            return true;\n        }\n    }\n\n    relogInUserAlreadyInCore() {\n        let enteringPerson = this.props.users.filter(user => user.initials === this.state.selectedUser)[0];\n        let newEntryTransaction = {\n            initials:enteringPerson.initials,\n            team:enteringPerson.team,\n            entrytimestamp:Date.now()\n        }\n        let existingTransactionID = {\n            id:this.state.selectedUsersEntryTransactionID\n        }\n        this.props.transactionActions.clearExistingEntry(existingTransactionID);\n        this.props.transactionActions.logNewEntry(newEntryTransaction);\n        let timePeriod = this.props.timeBoundry;\n        this.props.transactionActions.getTransactionsInTimePeriod(timePeriod);\n    }\n\n    normalNewEntry() {\n        let enteringPerson = this.props.users.filter(user => user.initials === this.state.selectedUser)[0];\n        let newEntryTransaction = {\n            initials:enteringPerson.initials,\n            team:enteringPerson.team,\n            entrytimestamp:Date.now()\n        }\n        this.props.transactionActions.logNewEntry(newEntryTransaction);\n        let timePeriod = this.props.timeBoundry;\n        this.props.transactionActions.getTransactionsInTimePeriod(timePeriod);\n    }\n\n    render() {\n        let knownInitials = this.props.users.map(user => user.initials);\n        return(\n            <div>\n                <Container>\n                    <Row>\n                        <Col md={{ size: 6, offset: 3 }}>\n                            <h1>Enter the Core</h1>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Row>\n                                <Card>\n                                    <h2>Select Person to Enter the Core</h2>\n                                    <Row>\n                                        <Col md=\"2\"></Col>\n                                        <Col md=\"8\">\n                                            <UserDropdown knownInitials = {knownInitials} updateSelection = {this.updateSelection}/>\n                                        </Col>\n                                        <Col md=\"2\"></Col>\n                                    </Row>\n                                </Card>\n                            </Row>\n                            <Row>\n                                <Card>\n                                        <Row>\n                                            <Col md=\"12\">\n                                                {this.state.selectedUser === '' ? \n                                                    <div></div> : \n                                                    <div>\n                                                        {this.state.selectedUserIsInCore ? \n                                                        <UserIsAlreadyInCore initials = {this.state.selectedUser} logInNewEntry = {this.relogInUserAlreadyInCore}/>: \n                                                        <UserValidNewCoreEntry transactions = {this.props.transactions} initials = {this.state.selectedUser} logInNewEntry = {this.normalNewEntry} timeBoundry = {this.props.timeBoundry}/>}\n                                                    </div>}\n                                                \n                                            </Col>\n                                        </Row>\n                                </Card>\n                                \n                            </Row>\n                        </Col>\n                        <Col>\n                            <Card>\n                                <h2>People Currently in Core</h2>\n                                <Row>\n                                    <Col md=\"1\"></Col>\n                                    <Col md=\"10\">\n                                    <UsersInCore transactions = {this.props.transactions} />\n                                    </Col>\n                                    <Col md=\"1\"></Col>\n                                </Row>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n                \n                \n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps){\n    return {\n        transactions:state.transactions,\n        users:state.users,\n        timeBoundry:state.timeBoundry\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        transactionActions: bindActionCreators(transactionActions, dispatch)\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogUsersInToCore); ","import React from 'react';\nimport { FormGroup, Label, Input } from 'reactstrap';\n\nexport default class UsersInCoreSelecter extends React.Component {\n  \n  \n    render() {\n    const {initials, updateSelection} = this.props;\n    return (\n        <FormGroup>\n            <Label for=\"exampleSelect\">Select initials of person to leave core:</Label>\n            <Input \n                type=\"select\" \n                name=\"select\" \n                id=\"exampleSelect\"\n                onChange = {updateSelection}\n            >\n            <option key = {9999} id={9999}></option>\n            {initials.map((initials, index)=>{\n                return(<option key = {index} id={index} >{initials}</option>)\n            })}\n            </Input>\n        </FormGroup>\n    );\n  }\n}","import React from 'react';\nimport { Table } from 'reactstrap';\nimport moment from 'moment'\n\nexport default class UsersTransactions extends React.Component {\n  render() {\n    const { transactions } = this.props;\n    return (\n      <Table>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Entered Core</th>\n            <th>Exited Core</th>\n            <th>Glove</th>\n            <th>Gown</th>\n          </tr>\n        </thead>\n\n        <tbody>\n            {transactions.map((transaction, index) => {\n                let entryTime = moment(transaction.entrytimestamp).format('DDMMMYY HH:mm:ss');\n                let exitTime=transaction.exittimestamp;\n                if (exitTime) {\n                    exitTime = moment(transaction.entrytimestamp).format('DDMMMYY HH:mm:ss');\n                } else {\n                    exitTime = 'n/a';\n                }\n\n                return(\n                    <tr key = {index}>\n                        <td>{index +1 }</td>\n                        <td>{entryTime}</td>\n                        <td>{exitTime}</td>\n                        <td>{transaction.glove?'yes':'no'}</td>\n                        <td>{transaction.gown?'yes':'no'}</td>\n                    </tr>\n                )\n            })\n          }\n          \n        </tbody>\n      </Table>\n    );\n  }\n}","import React from 'react';\nimport { Container, Row, Col, Button, Alert } from 'reactstrap';\nimport * as transactionManipulations from '../../api/transactionManipulations';\nimport moment from 'moment';\n\n\n\nexport default class UserExitCoreSummaryCard extends React.Component {\n  \n  \n    render() {\n        const {transactions, initials, exitTheCore, timeBoundry, selectedGown, selectedGloves, clickedGown, clickedGloves} = this.props;\n        let currentTime = Date.now();\n        let weekBoundries = {\n            lowerBoundry:timeBoundry.lowerBoundry,\n            upperBoundry:timeBoundry.upperBoundry\n        }\n        let entriesInformation = transactionManipulations.countOfEntriesByDay(initials,transactions,weekBoundries);\n        let numberOfDaysWithAnEntryThisWeek = transactionManipulations.numberOfEntryDays(entriesInformation);\n        let hasValidGloveSampleForToday = transactionManipulations.forTimePointAndUserIsThereGloveSample(initials,transactions,currentTime);\n        let numberOfGownSamplesThisWeek = transactionManipulations.countOfGownSamplesInTimePeriodForUser(initials,transactions,weekBoundries);\n        let hasValidGownSamples = false;\n        if (numberOfDaysWithAnEntryThisWeek <= 1) {\n            hasValidGownSamples = false;\n        } else if (numberOfDaysWithAnEntryThisWeek >= 2){\n            if (numberOfGownSamplesThisWeek >=2) {\n                hasValidGownSamples = true;\n            } else {\n                hasValidGownSamples = false;\n            }\n        } \n        let buttonColor = 'danger';\n        console.log(`${initials} glove: ${hasValidGloveSampleForToday} gown: ${hasValidGownSamples}`)\n        if (hasValidGloveSampleForToday && hasValidGownSamples) {\n            buttonColor = 'success';\n        }\n        let gownButtonColor;\n        let gloveButtonColor;\n        if (selectedGown) {\n            gownButtonColor = 'primary'\n        } else {\n            gownButtonColor = 'secondary'\n        }\n        if (selectedGloves) {\n            gloveButtonColor = 'primary'\n        } else {\n            gloveButtonColor = 'secondary'\n        }\n        return (\n            <Container>\n                <Row>\n                    <h3>{initials}</h3> \n                    <p>\n                        {initials} has entered the core {numberOfDaysWithAnEntryThisWeek} days this week <br/>\n                        {initials} has {numberOfGownSamplesThisWeek} valid gown samples this week\n                    </p>\n                        {hasValidGloveSampleForToday?<div>{initials} has a valid glove sample in +/- 12 hours from {currentTime}</div>:<div>{initials} does not have a valid glove sample in +/- 12 hours from {moment(currentTime).format('DDMMMYY HH:mm:ss')}</div>}\n                    {hasValidGloveSampleForToday?<Alert color='success'>Gloves are good</Alert>:<Alert color='danger'>Need glove samples </Alert>}\n                    {hasValidGownSamples?<Alert color='success'>Gown samples are good</Alert>:<Alert color='danger'>Need gown samples </Alert>}\n                </Row>\n                <Row>\n                    <Col sm=\"12\">\n                        <h3>Select which samples</h3>\n                    </Col>\n                    <Row>\n                        <Col sm=\"6\">\n                            <Button\n                                color = {gownButtonColor}\n                                onClick = {clickedGown}\n                            >\n                                Gown Samples\n                            </Button>\n                        </Col>\n                        <Col sm=\"6\">\n                            <Button\n                                color = {gloveButtonColor}\n                                onClick = {clickedGloves}\n                            >\n                                Glove Samples\n                            </Button>\n                        </Col>\n                    </Row>\n                    \n                </Row>\n                <Row>\n                    <Col sm=\"12\">\n                        <Row>\n                            <br/>\n                        </Row>\n                        <Row>\n                            <Button \n                                color={buttonColor}\n                                onClick={exitTheCore}\n                            >\n                                Log {initials} out of the core\n                            </Button>\n                        </Row>\n                    </Col>\n                </Row>\n                \n            </Container>\n        );\n  }\n}","import React from 'react';\nimport {connect} from 'react-redux';\nimport * as transactionActions from '../actions/transactionActions';\nimport {bindActionCreators} from 'redux';\nimport { Container, Row, Col } from 'reactstrap';\nimport * as transactionManipulations from '../api/transactionManipulations';\nimport UsersInCoreSelecter from '../components/ExitCore/UsersInCoreSelecter';\nimport UsersTransactions from '../components/ExitCore/UsersTransactions';\nimport UserExitCoreSummaryCard from '../components/ExitCore/UserExitCoreSummaryCard';\n\n\nclass ExitCore extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            selectedUser:'',\n            selectedUsersEntryTransactionID:'',\n            selectedGownSamples:false,\n            selectedGloveSamples:false\n        };\n        this.updateSelection = this.updateSelection.bind(this);\n        this.clickedGown = this.clickedGown.bind(this);\n        this.clickedGloves = this.clickedGloves.bind(this);\n        this.exitTheCore = this.exitTheCore.bind(this)\n    }   \n\n    updateSelection(event) {\n        let selectedUser = event.target.value;\n        let selectedUsersEntryTransactionID = '';\n        if (selectedUser !== '') {\n            selectedUsersEntryTransactionID = this.props.transactions.filter(transaction => transaction.initials === selectedUser).filter(transaction => transaction.exittimestamp === null)[0].id;\n        }\n        this.setState({\n            selectedUser:selectedUser,\n            selectedUsersEntryTransactionID:selectedUsersEntryTransactionID\n        });\n    }\n\n    exitTheCore() {\n        let exitTransaction = {\n            id:this.state.selectedUsersEntryTransactionID,\n            initials:this.state.selectedUser,\n            exittimestamp:Date.now(),\n            gown:0,\n            glove:0\n        }\n        if (this.state.selectedGownSamples) { exitTransaction.gown = 1 };\n        if (this.state.selectedGloveSamples) { exitTransaction.glove = 1 };\n        console.log(exitTransaction);\n        this.props.transactionActions.logExit(exitTransaction);\n    }\n\n    clickedGown() {\n        let currentState = this.state.selectedGownSamples;\n        this.setState({\n            selectedGownSamples:!currentState\n        });\n    }\n    clickedGloves() {\n        let currentState = this.state.selectedGloveSamples;\n        this.setState({\n            selectedGloveSamples:!currentState\n        });\n    }\n\n\n    render() {\n        let usersInCore = transactionManipulations.usersInCore(this.props.transactions);\n        let selectedUsersTransactions = this.props.transactions.filter(transaction => transaction.initials === this.state.selectedUser);\n        return(\n            <div>\n                <Container>\n                    <Row>\n                        <Col sm=\"4\">\n                            <Row>\n                                <UsersInCoreSelecter initials = {usersInCore} updateSelection = {this.updateSelection}/>    \n                            </Row>\n                            <Row>\n                                {this.state.selectedUser !==''?\n                                    <UserExitCoreSummaryCard \n                                        transactions = {this.props.transactions}\n                                        initials = {this.state.selectedUser}\n                                        exitTheCore = {this.exitTheCore}\n                                        timeBoundry = {this.props.timeBoundry}\n                                        selectedGloves = {this.state.selectedGloveSamples}\n                                        selectedGown = {this.state.selectedGownSamples}\n                                        clickedGown = {this.clickedGown}\n                                        clickedGloves = {this.clickedGloves}\n                                    />:\n                                    <div></div>\n                                }\n                            </Row>\n                        </Col>\n                        <Col sm=\"8\">\n                            <Row>\n                                Users current Transaction\n                                <UsersTransactions transactions = {selectedUsersTransactions} />\n                            </Row>\n                        </Col>\n                        \n                    </Row>\n                </Container>\n                \n                \n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps){\n    return {\n        transactions:state.transactions,\n        users:state.users,\n        timeBoundry:state.timeBoundry\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        transactionActions: bindActionCreators(transactionActions, dispatch)\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExitCore); ","import React from 'react';\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, CardTitle, CardText, Row, Col } from 'reactstrap';\nimport classnames from 'classnames';\nimport LogUserInToCoreContainer from './LogUserInToCoreContainer';\nimport ExitCore from './ExitCore';\n\nexport default class Example extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      activeTab: '1'\n    };\n  }\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n  render() {\n    return (\n      <div>\n        <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '1' })}\n              onClick={() => { this.toggle('1'); }}\n            >\n              Enter Core\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '2' })}\n              onClick={() => { this.toggle('2'); }}\n            >\n              Exit Core\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '3' })}\n              onClick={() => { this.toggle('3'); }}\n            >\n              Reporting\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '4' })}\n              onClick={() => { this.toggle('4'); }}\n            >\n              User Management\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={this.state.activeTab}>\n          <TabPane tabId=\"1\">\n            <Row>\n              <Col sm=\"12\">\n                <LogUserInToCoreContainer />\n              </Col>\n            </Row>\n          </TabPane>\n          <TabPane tabId=\"2\">\n            <Row>\n              <Col sm=\"12\">\n                <Card body>\n                  <ExitCore />\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n          <TabPane tabId=\"3\">\n            <Row>\n              <Col sm=\"12\">\n                <Card body>\n                  <CardTitle>Reporting</CardTitle>\n                  <CardText>there will be a section for reports here</CardText>\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n          <TabPane tabId=\"4\">\n            <Row>\n              <Col sm=\"12\">\n                <Card body>\n                  <CardTitle>User Management</CardTitle>\n                  <CardText>stuff</CardText>\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n        </TabContent>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport configureStore from './store/configureStore';\nimport {Provider} from 'react-redux';\nimport {getAllKnownUsers} from './actions/userActions';\nimport { setOverallTimeBoundries } from './actions/timeBoundryActions';\nimport { getTransactionsInTimePeriod } from './actions/transactionActions';\nimport * as timeManipulations from './api/timeManipulations';\nimport TabBarContainer from './containers/TabBarContainer';\n\nconst store = configureStore();\nstore.dispatch(getAllKnownUsers());\nlet shiftBoundry = timeManipulations.getShiftTimeBoundries(Date.now());\nlet weekBoundry = timeManipulations.getWeekTimeBoundries(Date.now());\nstore.dispatch(setOverallTimeBoundries(weekBoundry,shiftBoundry));\n\nlet timePeriod = store.getState().timeBoundry;\nstore.dispatch(getTransactionsInTimePeriod(timePeriod));\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <TabBarContainer />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import * as types from './actionTypes';\nimport axios from 'axios';\nimport {beginAjaxCall, ajaxCallError} from './ajaxStatusActions';\n\nexport function addUser(user) {\n    return { type: types.ADD_USER, user:user}\n};\n\nexport function getAllKnownUsersSuccess(payload) {\n    return {type:types.GET_ALL_KNOWN_USERS_SUCCESS, payload};\n};\n\nexport function getAllKnownUsers() {\n    return function (dispatch) {\n        dispatch(beginAjaxCall());\n        axios.get('http://50.19.1.144:3000/getallknownusers')\n            .then((response) => {\n                let payload = response.data;\n                dispatch(getAllKnownUsersSuccess(payload));\n            })\n            .catch(error => {\n                dispatch(ajaxCallError());\n                throw(error);\n            });\n    };\n};\n\n","import moment from 'moment';\n\nexport function getShiftTimeBoundries(timeValue) { // returns time bounds as number\n    let sixHundred = moment({hour: 6, minute: 0, seconds: 0}); \n    let eighteenHundred = moment({hour: 18, minute:0, seconds:0});\n    let selectedTime = moment(timeValue);\n    let shiftTimeBoundries = {\n            lowerBoundry:'',\n            upperBoundry:''\n    };\n    if (selectedTime < sixHundred) {\n        shiftTimeBoundries.lowerBoundry = eighteenHundred.subtract(1, 'days').unix()*1000;\n        shiftTimeBoundries.upperBoundry = sixHundred.unix()*1000;\n        shiftTimeBoundries.lowerBoundryReadable = moment(shiftTimeBoundries.lowerBoundry).format('DD-MMM-YYYY HH:mm:ss');\n        shiftTimeBoundries.upperBoundryReadable = moment(shiftTimeBoundries.upperBoundry).format('DD-MMM-YYYY HH:mm:ss');\n        return shiftTimeBoundries;\n    } else if (selectedTime >= sixHundred && selectedTime < eighteenHundred ) {\n        shiftTimeBoundries.lowerBoundry = sixHundred.unix()*1000;\n        shiftTimeBoundries.upperBoundry = eighteenHundred.unix()*1000;\n        shiftTimeBoundries.lowerBoundryReadable = moment(shiftTimeBoundries.lowerBoundry).format('DD-MMM-YYYY HH:mm:ss');\n        shiftTimeBoundries.upperBoundryReadable = moment(shiftTimeBoundries.upperBoundry).format('DD-MMM-YYYY HH:mm:ss');\n        return shiftTimeBoundries;\n    } else {\n        shiftTimeBoundries.lowerBoundry = eighteenHundred.unix()*1000;\n        shiftTimeBoundries.upperBoundry = sixHundred.add(1, 'days').unix()*1000;\n        shiftTimeBoundries.lowerBoundryReadable = moment(shiftTimeBoundries.lowerBoundry).format('DD-MMM-YYYY HH:mm:ss');\n        shiftTimeBoundries.upperBoundryReadable = moment(shiftTimeBoundries.upperBoundry).format('DD-MMM-YYYY HH:mm:ss');\n        return shiftTimeBoundries;\n    }\n}\n\nexport function getWeekTimeBoundries(timeValue) {\n    let selectedDate = moment(timeValue);\n    let sixHundred = moment({hour: 6, minute: 0, seconds: 0});\n    let weekTimeBoundries = {\n        lowerBoundry:'',\n        upperBoundry:''\n    };\n\n    if (selectedDate.isBefore(sixHundred) && selectedDate.day() === 0) {\n        console('before six');\n        // this is for before 06:00 on mondays.  Need to set week to previous week\n        let lowerPlaceholder = moment(selectedDate).subtract(7,'days');\n        let lowerBoundry = moment().set({\n            'year': lowerPlaceholder.get('year'),\n            'months':lowerPlaceholder.get('months'),\n            'date': lowerPlaceholder.get('date'),\n            'hour':6,\n            'minute':0,\n            'second':0,\n            'millisecond':0\n        });\n        let upperBoundry = moment().set({\n            'year': selectedDate.get('year'),\n            'date': selectedDate.get('date'),\n            'months': selectedDate.get('months'),\n            'hour':6,\n            'minute':0,\n            'second':0,\n            'millisecond':0\n        });\n        weekTimeBoundries.lowerBoundry = lowerBoundry.unix()*1000;\n        weekTimeBoundries.upperBoundry = upperBoundry.unix()*1000;\n        return weekTimeBoundries;\n    } else {\n        // for anything after 0600 monday, set lower bound to 0600 monday of week\n        //    and upper bound to 0600 of next monday\n        let dayOfWeek = moment(selectedDate).day();\n        let dayOfWeekSubtractor = {};\n        let dayOfWeekAdder = {};\n        if (dayOfWeek === 0) {\n            dayOfWeekSubtractor=6;\n            dayOfWeekAdder = 1;\n        } else {\n            dayOfWeekSubtractor = moment(selectedDate).day()-1;\n            dayOfWeekAdder = 7-dayOfWeekSubtractor;\n        }\n        let lowerPlaceholder = moment(selectedDate).subtract(dayOfWeekSubtractor, 'days');\n        let upperPlaceholder = moment(selectedDate).add(dayOfWeekAdder, 'days');\n        let lowerBoundry = moment().set({\n            'year': lowerPlaceholder.get('year'),\n            'monhts':lowerPlaceholder.get('months'),\n            'date': lowerPlaceholder.get('date'),\n            'hour':6,\n            'minute':0,\n            'second':0,\n            'millisecond':0\n        });\n        let upperBoundry = moment().set({\n            'year': upperPlaceholder.get('year'),\n            'monhts':lowerPlaceholder.get('months'),\n            'date': upperPlaceholder.get('date'),\n            'hour':6,\n            'minute':0,\n            'second':0,\n            'millisecond':0\n        });\n        weekTimeBoundries.lowerBoundry = lowerBoundry.unix()*1000;\n        weekTimeBoundries.upperBoundry = upperBoundry.unix()*1000;\n        weekTimeBoundries.lowerBoundryReadable = lowerBoundry.format('DD-MMM-YYYY HH:mm:ss');\n        weekTimeBoundries.upperBoundryReadable = upperBoundry.format('DD-MMM-YYYY HH:mm:ss')\n        return weekTimeBoundries;\n    }\n}","import * as types from './actionTypes';\n\nexport function setTimeBoundry(lowerBoundry, upperBoundry) {\n    let payload = {\n        upperBoundry: upperBoundry,\n        lowerBoundry: lowerBoundry,\n    }\n    return ({type: types.SET_TIME_BOUNDRY, payload});\n}\n\nexport function setOverallTimeBoundries(weekBoundry, shiftBoundry) {\n    let payload = {\n        lowerBoundryReadable:weekBoundry.lowerBoundryReadable,\n        upperBoundryReadable:weekBoundry.upperBoundryReadable,\n        shiftLowerBoundryReadable:shiftBoundry.lowerBoundryReadable,\n        shiftUpperBoundryReadable:shiftBoundry.upperBoundryReadable,\n        lowerBoundry: weekBoundry.lowerBoundry,\n        upperBoundry: weekBoundry.upperBoundry,\n        shiftLowerBoundry: shiftBoundry.lowerBoundry,\n        shiftUpperBoundry: shiftBoundry.upperBoundry\n    }\n    return ({type: types.SET_OVERALL_TIME_BOUNDRIES, payload});\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}